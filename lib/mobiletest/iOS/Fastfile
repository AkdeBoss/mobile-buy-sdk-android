#!/usr/bin/env ruby
# encoding: utf-8

require 'yaml'
yml_config = YAML.load_file(File.expand_path("../.config.yml")) rescue nil
raise "Yaml Config was not found at .config.yml, have you run dev init?" if yml_config.nil?

platform :ios do
  desc "Runs all the iOS tests"
  lane :test do
    unit_tests
  end

  desc "Runs all the iOS unit tests"
  lane :unit_tests do
    args = {
      scheme: yml_config['scheme']['test']['name'],
      device: yml_config['scheme']['test']['device'],
      clean: false,
      code_coverage: true
    }

    if yml_config['xcworkspace']
      args[:workspace] = yml_config['xcworkspace']
    else
      args[:project] = yml_config['xcodeproj']
    end

    scan(args)
  end

  desc "Runs all the iOS snapshot tests"
  lane :snapshot_tests do
    args = {
      scheme: yml_config['scheme']['snapshot_test']['name'],
      device: yml_config['scheme']['snapshot_test']['device'],
      clean: false
    }
    
    if yml_config['xcworkspace']
      args[:workspace] = yml_config['xcworkspace']
    else
      args[:project] = yml_config['xcodeproj']
    end

    scan(args)
  end

  desc "Bumps the version number"
  lane :bump_version_number do
    args = { message: 'Bump Version Number' }
    
    if yml_config['xcworkspace']
      args[:workspace] = yml_config['xcworkspace']
    else
      args[:project] = yml_config['xcodeproj']
    end

    commit_version_bump(args)
  end

  desc "Release a new beta version on Hockey"
  desc "This action does the following:"
  desc ""
  desc "- Ensures a clean git status"
  desc "- Increment the build number"
  desc "- Build and sign the app"
  desc "- Upload the ipa file to hockey"
  lane :hockey_deploy do 
    ensure_git_status_clean
    increment_build_number build_number: Time.new.strftime("%Y.%m.%d")

    args = {
      configuration: "Internal",
      scheme: yml_config['scheme']['hockey']['name'],
      clean: true,
      ipa: "#{yml_config['title']}.ipa",
      archive: true 
    }

    if yml_config['xcworkspace']
      args[:workspace] = yml_config['xcworkspace']
    else
      args[:project] = yml_config['xcodeproj']
    end

    ipa(args)
    hockey(app_id: yml_config['hockey']['public_identifier'], api_token: ENV['HOCKEY_API_TOKEN']) # TODO: does app_id work?
    clean_build_artifacts
  end
end