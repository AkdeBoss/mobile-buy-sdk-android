#!/usr/bin/env ruby
# encoding: utf-8

require 'yaml'
yml_config = YAML.load_file(File.expand_path("../.config.yml")) rescue nil
raise "Yaml Config was not found at .config.yml, have you run dev init?" if yml_config.nil?

platform :ios do
  desc "Runs all the iOS tests"
  lane :test do
    unit_tests
  end

  desc "Runs all the iOS unit tests"
  lane :unit_tests do
    args = {
      scheme: yml_config['scheme']['test']['name'],
      device: yml_config['scheme']['test']['device'],
      clean: false,
      code_coverage: true
    }

    if yml_config['xcworkspace']
      args[:workspace] = yml_config['xcworkspace']
    else
      args[:project] = yml_config['xcodeproj']
    end

    scan(args)
  end

  desc "Runs all the iOS snapshot tests"
  lane :snapshot_tests do
    args = {
      scheme: yml_config['scheme']['snapshot_test']['name'],
      device: yml_config['scheme']['snapshot_test']['device'],
      clean: false
    }
    
    if yml_config['xcworkspace']
      args[:workspace] = yml_config['xcworkspace']
    else
      args[:project] = yml_config['xcodeproj']
    end

    scan(args)
  end

  desc "Bumps the version number"
  lane :bump_version_number do
    args = { message: 'Bump Version Number', project: yml_config['xcodeproj'] }
    commit_version_bump(args)
  end

  desc "Sets up CI for tests and for hockey deploys"
  lane :setup_ci do
    secret_yml_config = YAML.load_file(File.expand_path("../.secret_config.yml")) rescue nil
    raise "Yaml Config was not found at .secret_config.yml, have you run dev init?" if secret_yml_config.nil?

    git_repo = `git config --get remote.origin.url`.strip
    raise "You need to setup a git origin before setting up CI" if git_repo.nil?

    app_params = {
      'public_identifier' => yml_config['hockey']['public_identifier'],
      'git_repo' => git_repo
    }.to_json

    uri = URI("https://mobile.shopify.io/apps/buildkite/create_pipeline.json")
    http = Net::HTTP.new(uri.host, uri.port)
    http.use_ssl = true

    headers = {
      'X-Authorization' => secret_yml_config['mobile_token'],
      'Content-Type' => 'application/json'
    }

    response = http.post(uri.path, app_params, headers)
    puts response.body
  end

  desc "Release a new beta version on Hockey"
  desc "This action does the following:"
  desc ""
  desc "- Ensures a clean git status"
  desc "- Increment the build number"
  desc "- Build and sign the app"
  desc "- Upload the ipa file to hockey"
  lane :hockey_deploy do 
    ensure_git_status_clean

    args = {
      configuration: "Debug",
      scheme: yml_config['scheme']['hockey']['name'],
      silent: true,
      clean: true,
      output_name: "#{yml_config['title']}.ipa",
    }

    if yml_config['xcworkspace']
      args[:workspace] = yml_config['xcworkspace']
    else
      args[:project] = yml_config['xcodeproj']
    end

    increment_build_number(build_number: Time.new.strftime("%Y.%m.%d"), xcodeproj: yml_config['xcodeproj'])

    gym(args)
    hockey(app_id: yml_config['hockey']['public_identifier'], ipa: "./#{yml_config['title']}.ipa", api_token: ENV['HOCKEY_API_TOKEN']) # TODO: does app_id work?
    clean_build_artifacts
  end
end